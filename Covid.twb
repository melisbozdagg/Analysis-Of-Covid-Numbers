<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0916.1526                               -->
<workbook original-version='18.1' source-build='2022.2.2 (20222.22.0916.1526)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sayfa1 (tableau table1)' inline='true' name='federated.0u9nww50ben2uo164gkqy0s5gz3z' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table1' name='excel-direct.0cya6l21i430ry1508zsg0sllsyw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/bozda/OneDrive/Masaüstü/tableau table1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0cya6l21i430ry1508zsg0sllsyw' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0cya6l21i430ry1508zsg0sllsyw' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_4CB890CBB0594747ADA716AA8E11A859]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_4CB890CBB0594747ADA716AA8E11A859]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_4CB890CBB0594747ADA716AA8E11A859]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sayfa1' datatype='table' name='[__tableau_internal_object_id__].[Sayfa1_4CB890CBB0594747ADA716AA8E11A859]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/bozda/OneDrive/Belgeler/My Tableau Repository/Datasources/Sayfa1 (tableau table1).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/06/2022 09:38:22 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Sayfa1 (tableau table1)' increment-value='%null%' refresh-type='create' rows-inserted='1' timestamp-start='2022-10-06 09:38:21.525' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sayfa1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_4CB890CBB0594747ADA716AA8E11A859]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sayfa1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_4CB890CBB0594747ADA716AA8E11A859]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sayfa1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_4CB890CBB0594747ADA716AA8E11A859]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sayfa1' id='Sayfa1_4CB890CBB0594747ADA716AA8E11A859'>
            <properties context=''>
              <relation connection='excel-direct.0cya6l21i430ry1508zsg0sllsyw' name='Sayfa1' table='[Sayfa1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sayfa1 (tableau table 2)' inline='true' name='federated.0ekvwpt18gb99917ddj5a1thgcf7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 2' name='excel-direct.0kbyynx1i6cjs219cza0a0bjh0om'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/bozda/OneDrive/Masaüstü/tableau table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0kbyynx1i6cjs219cza0a0bjh0om' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:B211:no:A1:B211:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0kbyynx1i6cjs219cza0a0bjh0om' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:B211:no:A1:B211:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B211:no:A1:B211:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_1BB4619FD39743B0BDD270006F90FBEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_1BB4619FD39743B0BDD270006F90FBEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sayfa1' datatype='table' name='[__tableau_internal_object_id__].[Sayfa1_1BB4619FD39743B0BDD270006F90FBEA]' role='measure' type='quantitative' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/bozda/OneDrive/Belgeler/My Tableau Repository/Datasources/Sayfa1 (tableau table 2).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/06/2022 09:38:41 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Sayfa1 (tableau table 2)' increment-value='%null%' refresh-type='create' rows-inserted='210' timestamp-start='2022-10-06 09:38:40.783' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sayfa1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LTR_RTR' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_1BB4619FD39743B0BDD270006F90FBEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sayfa1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>174</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_1BB4619FD39743B0BDD270006F90FBEA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' palette='purple_pink_gray_10_0' type='palette'>
            <map to='#7c7270'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#7c7270'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8074a8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9b93c9'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#9c9290'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#b173a0'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#c46487'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#c5bfbe'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#c6c1f0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#c799bc'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ddb5d5'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f498b6'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbed1'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sayfa1' id='Sayfa1_1BB4619FD39743B0BDD270006F90FBEA'>
            <properties context=''>
              <relation connection='excel-direct.0kbyynx1i6cjs219cza0a0bjh0om' name='Sayfa1' table='[Sayfa1$]' type='table'>
                <columns gridOrigin='A1:B211:no:A1:B211:0' header='yes' outcome='2'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sayfa1 (tableau table 3)' inline='true' name='federated.1yep1bh1u1zmic1e8dopo1mx5mwi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 3' name='excel-direct.1ra58980w4vbi511bbos206qqg91'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/bozda/OneDrive/Masaüstü/tableau table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ra58980w4vbi511bbos206qqg91' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='HighesInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1ra58980w4vbi511bbos206qqg91' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='2'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='HighesInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_E4C56A186F2B41F5B9664BA614ABD0E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_E4C56A186F2B41F5B9664BA614ABD0E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighesInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighesInfectionCount]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>HighesInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_E4C56A186F2B41F5B9664BA614ABD0E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_E4C56A186F2B41F5B9664BA614ABD0E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sayfa1' datatype='table' name='[__tableau_internal_object_id__].[Sayfa1_E4C56A186F2B41F5B9664BA614ABD0E5]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/bozda/OneDrive/Belgeler/My Tableau Repository/Datasources/Sayfa1 (tableau table 3).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/06/2022 09:38:54 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='Sayfa1 (tableau table 3)' increment-value='%null%' refresh-type='create' rows-inserted='219' timestamp-start='2022-10-06 09:38:53.567' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sayfa1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LTR_RTR' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_E4C56A186F2B41F5B9664BA614ABD0E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sayfa1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_E4C56A186F2B41F5B9664BA614ABD0E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighesInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighesInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighesInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sayfa1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_E4C56A186F2B41F5B9664BA614ABD0E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sayfa1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_E4C56A186F2B41F5B9664BA614ABD0E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sayfa1' id='Sayfa1_E4C56A186F2B41F5B9664BA614ABD0E5'>
            <properties context=''>
              <relation connection='excel-direct.1ra58980w4vbi511bbos206qqg91' name='Sayfa1' table='[Sayfa1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='2'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='HighesInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sayfa1 (tableau table 4)' inline='true' name='federated.092u4kx0m6vge610j0fsh0ph8p47' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 4' name='excel-direct.0kibofo1nn7390187h3wg02vru4h'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/bozda/OneDrive/Masaüstü/tableau table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0kibofo1nn7390187h3wg02vru4h' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy-MM-dd HH:mm:ss.SSS' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0kibofo1nn7390187h3wg02vru4h' name='Sayfa1' table='[Sayfa1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy-MM-dd HH:mm:ss.SSS' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_5F9C9F180AC5426EB97A5423E4671A41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_5F9C9F180AC5426EB97A5423E4671A41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LTR_RTR_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_5F9C9F180AC5426EB97A5423E4671A41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_5F9C9F180AC5426EB97A5423E4671A41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sayfa1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_5F9C9F180AC5426EB97A5423E4671A41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sayfa1' datatype='table' name='[__tableau_internal_object_id__].[Sayfa1_5F9C9F180AC5426EB97A5423E4671A41]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/bozda/OneDrive/Belgeler/My Tableau Repository/Datasources/Sayfa1 (tableau table 4).hyper' default-settings='yes' schema='Extract' sslmode='' update-time='10/06/2022 09:38:06 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sayfa1 (tableau table 4)' increment-value='%null%' refresh-type='create' rows-inserted='85171' timestamp-start='2022-10-06 09:38:02.813' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sayfa1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LTR_RTR' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_5F9C9F180AC5426EB97A5423E4671A41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sayfa1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>289</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_5F9C9F180AC5426EB97A5423E4671A41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sayfa1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1437</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_5F9C9F180AC5426EB97A5423E4671A41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sayfa1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17308</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_5F9C9F180AC5426EB97A5423E4671A41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sayfa1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28756</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sayfa1_5F9C9F180AC5426EB97A5423E4671A41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sayfa1' id='Sayfa1_5F9C9F180AC5426EB97A5423E4671A41'>
            <properties context=''>
              <relation connection='excel-direct.0kibofo1nn7390187h3wg02vru4h' name='Sayfa1' table='[Sayfa1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy-MM-dd HH:mm:ss.SSS' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Overview </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sayfa1 (tableau table1)' name='federated.0u9nww50ben2uo164gkqy0s5gz3z' />
          </datasources>
          <datasource-dependencies datasource='federated.0u9nww50ben2uo164gkqy0s5gz3z'>
            <column datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0u9nww50ben2uo164gkqy0s5gz3z].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u9nww50ben2uo164gkqy0s5gz3z].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u9nww50ben2uo164gkqy0s5gz3z].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0u9nww50ben2uo164gkqy0s5gz3z].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0u9nww50ben2uo164gkqy0s5gz3z].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='3' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#b07aa1' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0u9nww50ben2uo164gkqy0s5gz3z].[:Measure Names]' value='174' />
            <format attr='color' value='#4e79a7' />
            <format attr='text-format' field='[federated.0u9nww50ben2uo164gkqy0s5gz3z].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.0u9nww50ben2uo164gkqy0s5gz3z].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='height' value='62' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#ddebf0' />
            <format attr='background-color' scope='rows' value='#f3ebf3' />
            <format attr='background-color' scope='cols' value='#e2e6f0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f2f9f9' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='3' />
            <format attr='stroke-color' value='#b07aa1' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='3' />
            <format attr='stroke-color' value='#b07aa14b' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='2' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#b07aa1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0u9nww50ben2uo164gkqy0s5gz3z].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.3953038454055786' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='3' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0u9nww50ben2uo164gkqy0s5gz3z].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{212645A2-A072-4C43-958B-13E3680E0306}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Death Count By Location</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sayfa1 (tableau table 2)' name='federated.0ekvwpt18gb99917ddj5a1thgcf7' />
          </datasources>
          <datasource-dependencies datasource='federated.0ekvwpt18gb99917ddj5a1thgcf7'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0ekvwpt18gb99917ddj5a1thgcf7].[none:Location:nk]' direction='ASC' using='[federated.0ekvwpt18gb99917ddj5a1thgcf7].[sum:TotalDeathCount:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0ekvwpt18gb99917ddj5a1thgcf7].[sum:TotalDeathCount:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ekvwpt18gb99917ddj5a1thgcf7].[none:Location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5272375345230103' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ekvwpt18gb99917ddj5a1thgcf7].[none:Location:nk]</rows>
        <cols>[federated.0ekvwpt18gb99917ddj5a1thgcf7].[sum:TotalDeathCount:qk]</cols>
      </table>
      <simple-id uuid='{467280BD-EAA3-4371-8F95-61527A4592E9}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sayfa1 (tableau table 4)' name='federated.092u4kx0m6vge610j0fsh0ph8p47' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.092u4kx0m6vge610j0fsh0ph8p47'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.092u4kx0m6vge610j0fsh0ph8p47].[Longitude (generated)]' field-type='quantitative' max='15293874.912806135' min='-11613758.55424902' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.092u4kx0m6vge610j0fsh0ph8p47].[Latitude (generated)]' field-type='quantitative' max='4851555.3226928459' min='-4117656.1002955264' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.092u4kx0m6vge610j0fsh0ph8p47].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.092u4kx0m6vge610j0fsh0ph8p47].[sum:PercentPopulationInfected:qk]' />
              <lod column='[federated.092u4kx0m6vge610j0fsh0ph8p47].[none:Location:nk]' />
              <geometry column='[federated.092u4kx0m6vge610j0fsh0ph8p47].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.092u4kx0m6vge610j0fsh0ph8p47].[Latitude (generated)]</rows>
        <cols>[federated.092u4kx0m6vge610j0fsh0ph8p47].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A4788C28-2EE6-4393-8E9B-70F6D4A932AD}' />
    </worksheet>
    <worksheet name='Sheet3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected And Forecasting</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sayfa1 (tableau table 4)' name='federated.092u4kx0m6vge610j0fsh0ph8p47' />
          </datasources>
          <datasource-dependencies datasource='federated.092u4kx0m6vge610j0fsh0ph8p47'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' forecast-column-base='[sum:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.092u4kx0m6vge610j0fsh0ph8p47].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.092u4kx0m6vge610j0fsh0ph8p47].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.092u4kx0m6vge610j0fsh0ph8p47].[tmn:date:qk]' value='459' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.092u4kx0m6vge610j0fsh0ph8p47].[none:Location:nk]&#10;[federated.092u4kx0m6vge610j0fsh0ph8p47].[none:Forecast Indicator:nk]' value='Percent Population Infected and Forecasting'>
              <formatted-text>
                <run>Percent Population Infected and Forecasting</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.092u4kx0m6vge610j0fsh0ph8p47].[none:Location:nk]' />
              <text column='[federated.092u4kx0m6vge610j0fsh0ph8p47].[none:Location:nk]' />
              <color column='[federated.092u4kx0m6vge610j0fsh0ph8p47].[none:Forecast Indicator:nk]' />
              <text column='[federated.092u4kx0m6vge610j0fsh0ph8p47].[fVal:sum:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.092u4kx0m6vge610j0fsh0ph8p47].[fVal:sum:PercentPopulationInfected:qk]</rows>
        <cols>[federated.092u4kx0m6vge610j0fsh0ph8p47].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{A778E577-31DA-4996-8E01-3F6848A083B1}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='89431' id='17' param='horz' type-v2='layout-flow' w='99034' x='483' y='9640'>
            <zone h='89431' id='14' param='horz' type-v2='layout-flow' w='89378' x='483' y='9640'>
              <zone h='89431' id='12' type-v2='layout-basic' w='89378' x='483' y='9640'>
                <zone h='15489' id='3' name='Sheet 1' w='41943' x='483' y='41073'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='31433' id='5' name='Sheet 2' w='41943' x='483' y='9640'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='42509' id='15' name='Sheet3' w='89378' x='483' y='56562'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46922' id='19' name='Sheet 4' w='47435' x='42426' y='9640'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='89431' id='16' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='9640'>
              <zone fixed-size='710' h='83391' id='18' is-fixed='true' name='Sheet3' pane-specification-id='0' param='[federated.092u4kx0m6vge610j0fsh0ph8p47].[none:Location:nk]&#10;[federated.092u4kx0m6vge610j0fsh0ph8p47].[none:Forecast Indicator:nk]' type-v2='color' w='9656' x='89861' y='9640'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='8711' id='21' type-v2='layout-flow' w='99034' x='483' y='929'>
            <zone h='8711' id='20' name='Sheet 4' pane-specification-id='0' param='[federated.092u4kx0m6vge610j0fsh0ph8p47].[sum:PercentPopulationInfected:qk]' type-v2='color' w='99034' x='483' y='929'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='33' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='32' param='vert' type-v2='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='244' h='31433' id='5' is-fixed='true' name='Sheet 2' w='41943' x='483' y='9640'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46922' id='19' is-fixed='true' name='Sheet 4' w='47435' x='42426' y='9640'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8711' id='20' name='Sheet 4' pane-specification-id='0' param='[federated.092u4kx0m6vge610j0fsh0ph8p47].[sum:PercentPopulationInfected:qk]' type-v2='color' w='99034' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='115' h='15489' id='3' is-fixed='true' name='Sheet 1' w='41943' x='483' y='41073'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42509' id='15' is-fixed='true' name='Sheet3' w='89378' x='483' y='56562'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='710' h='83391' id='18' name='Sheet3' pane-specification-id='0' param='[federated.092u4kx0m6vge610j0fsh0ph8p47].[none:Location:nk]&#10;[federated.092u4kx0m6vge610j0fsh0ph8p47].[none:Forecast Indicator:nk]' type-v2='color' w='9656' x='89861' y='9640'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B66459D8-EA11-4A3B-9906-AEB5A8835BC8}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u9nww50ben2uo164gkqy0s5gz3z].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{94A939C6-053B-4029-B3AB-CC21A651D982}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ekvwpt18gb99917ddj5a1thgcf7].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ekvwpt18gb99917ddj5a1thgcf7].[none:Location:nk]</field>
            <field>[federated.0ekvwpt18gb99917ddj5a1thgcf7].[none:TotalDeathCount:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AF55A3BE-11D8-4376-A364-716025436F76}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.092u4kx0m6vge610j0fsh0ph8p47].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.092u4kx0m6vge610j0fsh0ph8p47].[none:Location:nk]</field>
            <field>[federated.092u4kx0m6vge610j0fsh0ph8p47].[sum:PercentPopulationInfected:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{ED253C8E-1047-4303-8785-D2863C2EAE5F}' />
    </window>
    <window class='worksheet' name='Sheet3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.092u4kx0m6vge610j0fsh0ph8p47].[none:Location:nk]&#10;[federated.092u4kx0m6vge610j0fsh0ph8p47].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.092u4kx0m6vge610j0fsh0ph8p47].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{26BC78F8-E0DA-4C3E-BDB4-27154953A118}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2' />
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet3'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{964B6B5F-1B6D-4AC2-B993-552BAD9EF7FD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='86' name='Sheet 1' width='192'>
      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
      FacAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet3' width='192'>
      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
      muCAtrDczAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
